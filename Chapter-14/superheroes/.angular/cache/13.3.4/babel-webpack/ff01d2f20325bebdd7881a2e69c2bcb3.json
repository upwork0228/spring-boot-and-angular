{"ast":null,"code":"import _asyncToGenerator from \"/Users/devlinduldulao/Desktop/Books/Full-Stack-Web-Development-with-Spring-Boot-and-Angular/Chapter-14/superheroes/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { createEffect, ofType } from '@ngrx/effects';\nimport { map, mergeMap, catchError, tap } from 'rxjs/operators';\nimport { AuthActions } from './auth.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"src/app/core/services/authenticate.service\";\nimport * as i3 from \"@angular/router\";\nexport class AuthEffects {\n  constructor(actions$, authService, router) {\n    this.actions$ = actions$;\n    this.authService = authService;\n    this.router = router;\n    this.loginUser$ = createEffect(() => {\n      return this.actions$.pipe(ofType(AuthActions.LOGIN), mergeMap(data => this.authService.login(data.payload).pipe(map(data => ({\n        type: AuthActions.SET_TOKEN,\n        token: data.token\n      })), tap(() => this.router.navigate([\"anti-heroes\"])), catchError( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (data) {\n          return {\n            type: AuthActions.LOGIN_ERROR,\n            error: data.error\n          };\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()))));\n    }, {\n      dispatch: true\n    });\n    this.createUser$ = createEffect(() => {\n      return this.actions$.pipe(ofType(AuthActions.CREATE_USER), mergeMap(data => this.authService.register(data.payload).pipe(tap(() => this.router.navigate([\"login\"])), catchError( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator(function* (data) {\n          return {\n            type: AuthActions.LOGIN_ERROR,\n            error: data.error\n          };\n        });\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }()))));\n    }, {\n      dispatch: true\n    });\n  }\n\n}\n\nAuthEffects.ɵfac = function AuthEffects_Factory(t) {\n  return new (t || AuthEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.AuthenticateService), i0.ɵɵinject(i3.Router));\n};\n\nAuthEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthEffects,\n  factory: AuthEffects.ɵfac\n});","map":{"version":3,"sources":["/Users/devlinduldulao/Desktop/Books/Full-Stack-Web-Development-with-Spring-Boot-and-Angular/Chapter-14/superheroes/src/app/auth/state/auth.effects.ts"],"names":["createEffect","ofType","map","mergeMap","catchError","tap","AuthActions","i0","i1","i2","i3","AuthEffects","constructor","actions$","authService","router","loginUser$","pipe","LOGIN","data","login","payload","type","SET_TOKEN","token","navigate","LOGIN_ERROR","error","dispatch","createUser$","CREATE_USER","register","ɵfac","AuthEffects_Factory","t","ɵɵinject","Actions","AuthenticateService","Router","ɵprov","ɵɵdefineInjectable","factory"],"mappings":"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","sourcesContent":["import { createEffect, ofType } from '@ngrx/effects';\nimport { map, mergeMap, catchError, tap } from 'rxjs/operators';\nimport { AuthActions } from './auth.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"src/app/core/services/authenticate.service\";\nimport * as i3 from \"@angular/router\";\nexport class AuthEffects {\n    constructor(actions$, authService, router) {\n        this.actions$ = actions$;\n        this.authService = authService;\n        this.router = router;\n        this.loginUser$ = createEffect(() => {\n            return this.actions$.pipe(ofType(AuthActions.LOGIN), mergeMap(((data) => this.authService.login(data.payload)\n                .pipe(map(data => ({ type: AuthActions.SET_TOKEN, token: data.token })), tap(() => this.router.navigate([\"anti-heroes\"])), catchError(async (data) => ({ type: AuthActions.LOGIN_ERROR, error: data.error }))))));\n        }, { dispatch: true });\n        this.createUser$ = createEffect(() => {\n            return this.actions$.pipe(ofType(AuthActions.CREATE_USER), mergeMap(((data) => this.authService.register(data.payload)\n                .pipe(tap(() => this.router.navigate([\"login\"])), catchError(async (data) => ({ type: AuthActions.LOGIN_ERROR, error: data.error }))))));\n        }, { dispatch: true });\n    }\n}\nAuthEffects.ɵfac = function AuthEffects_Factory(t) { return new (t || AuthEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.AuthenticateService), i0.ɵɵinject(i3.Router)); };\nAuthEffects.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AuthEffects, factory: AuthEffects.ɵfac });\n"]},"metadata":{},"sourceType":"module"}